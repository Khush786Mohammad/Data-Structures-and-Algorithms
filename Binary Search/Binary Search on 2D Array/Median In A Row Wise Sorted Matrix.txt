// User function template for C++

class Solution {
    public:
    int upperBound(vector<int>& nums, int x)
    {
        int ans = nums.size();
        int low = 0;
        int high = nums.size()-1;
        
        while(low <= high)
        {
            int mid = low + (high-low)/2;
            if(nums[mid] > x)
            {
                ans = mid;
                high = mid-1;
            }
            else
                low = mid+1;
        }
        return ans;
    }
    int blackBox(vector<vector<int>>& mat, int mid)
    {
        int cnt = 0;
        int n = mat.size();
        
        for(int i = 0 ; i<n ; i++)
        {
            cnt += upperBound(mat[i],mid);
        }
        return cnt;
    }
    int median(vector<vector<int>> &mat) {
        int n = mat.size();
        int m = mat[0].size();
        
        int low = INT_MAX;
        int high = INT_MIN;
        
        for(int i = 0 ; i<n ; i++)
        {
            low = min(low,mat[i][0]);
            high = max(high,mat[i][m-1]);
        }
        int required = (n*m)/2;
        
        while(low <= high)
        {
            int mid = low + (high-low)/2;
            int smallerEquals = blackBox(mat,mid);
            if(smallerEquals <= required)
                low = mid+1;
            else
                high = mid-1;
        }
        return low;
    }
};
